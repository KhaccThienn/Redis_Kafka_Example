// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using Remake_Kafka_Example_01.Core.Domains;

#nullable disable

namespace Remake_Kafka_Example_01.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241008090128_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("DBTEST1")
                .UseCollation("USING_NLS_COMP")
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Remake_Kafka_Example_01.Core.Domains.TableProduct_V2", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("ID");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("VARCHAR2(200)")
                        .HasColumnName("NAME");

                    b.Property<decimal>("Price")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("PRICE");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("NUMBER(38)")
                        .HasColumnName("QUANTITY");

                    b.HasKey("Id");

                    b.ToTable("TABLE_PRODUCT_V2", "DBTEST1");
                });
#pragma warning restore 612, 618
        }
    }
}
